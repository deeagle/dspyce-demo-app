---
name: Release version

on:
  workflow_call:

env:
  fail-fast: true

permissions:
  contents: write
  issues: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.step1.outputs.app_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install @semantic-release/changelog @semantic-release/git @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/exec @semantic-release/git semantic-release/release-notes-generator

      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  get-release:
    name: Get latest release tag
    needs: release
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_release_tag.outputs.app_version }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get the last tag via git and store in var
        id: get_release_tag
        run: |
          APP_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "${APP_VERSION}"
          echo "app_version=${APP_VERSION}" >> ${GITHUB_OUTPUT}
  

  docker-hub:
    needs: get-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: show app_version from release job
        env:
          RELEASE_TAG: ${{ needs.get-release.outputs.app_version }}
        run: echo "Delivered release tag is ${RELEASE_TAG}"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        env:
          RELEASE_TAG: ${{ needs.get-release.outputs.app_version }}
        uses: docker/metadata-action@v5
        with:
          images: docdee/dspyce-demo-app
          tags: |
            type=ref,event=branch
            type=raw,value=${RELEASE_TAG}
            type=raw,value=latest
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
